# kubectl get gateway;
# kubectl get virtualservice;
# kubectl -n istio-system get service istio-ingressgateway;
#
# IP=$(minikube ip) 
# PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
# echo http://$IP:$PORT/
#
# kubectl delete gateway microservice-gateway;
# kubectl delete virtualservice microservice;

# kubectl apply -f /opt/istio-1.1.7/samples/httpbin/httpbin-nodeport.yaml
# kubectl apply -f /opt/istio-1.1.7/samples/httpbin/httpbin-gateway.yaml 
# curl -I http://192.168.99.102:31380/status/200
# curl -I http://192.168.99.102:31380/headers
#
# for disk in {1..1000}; do curl $(minikube ip):31380/microservice; echo ""; sleep 1; done;

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: microservice-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---
    
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: microservice
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /microservice
    rewrite:
      uri: /greet
    route:
    - destination:
        #host: microservice.default.svc.cluster.local
        host: microservice    
        port:
          number: 8081
  - match:
    - uri:
        prefix: /test
    rewrite:
      uri: /greet
    route:
    - destination:
        host: microservice    
        port:
          number: 8081          
        
          
# prefix: /microservice  
# exact: /microservice     
          
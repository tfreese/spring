# POD: Database
# H2-Console: jdbc:h2:tcp://localhost:9082/file:dummyDb
apiVersion: v1
kind: Pod
metadata:
    name: db-pod
    #namespace: demo
    labels:
        app: db-pod
    #    env: test
spec:
    # Pod weiter SecurityContext
    #securityContext:
    #    runAsNonRoot: true
    #    fsGroup: 1000
    #    runAsUser: 1000
    #    runAsGroup: 1000
    dnsPolicy: ClusterFirst
    containers:
        -   name: db
            image: 192.168.155.100:5000/h2:latest
            imagePullPolicy: Never
            #imagePullPolicy: IfNotPresent
            # Container spezifischer SecurityContext
            #securityContext:
            #    allowPrivilegedEscalation: false
            #    readOnlyRootFileSystem: true
            #    privileged: false
            ports:
                -   name: db-tcp
                    containerPort: 9082
                    protocol: TCP
                -   name: db-web
                    containerPort: 8082
                    protocol: TCP
            resources:
                requests:
                    cpu: "10m"
                    memory: 64Mi
                limits:
                    cpu: 0.75
                    memory: 128Mi
            #volumeDevices:
            #    -   name: db-storage
            #        devicePath: /dev/block
            volumeMounts:
                -   name: db-storage
                    mountPath: "/opt/h2/data"
                    subPath: h2
                    readOnly: false
            env:
                -   name: DB_IP
                    valueFrom:
                        fieldRef:
                            fieldPath: status.podIP
    volumes:
        -   name: db-storage
            # The hostPath is created INSIDE the minikube VM !!!
            # minikube ssh;
            # ls -hal /mnt/share
            #hostPath:
            #    path: "/mnt/share"
            #    type: DirectoryOrCreate
            #
            persistentVolumeClaim:
                claimName: pv-claim

# docker network create my-fancy-network
# docker run -i -t --name container1 --net=my-fancy-network --net-alias=container1 ubuntu:trusty /bin/bash
# docker run -i -t --name container2 --net=my-fancy-network --net-alias=container2 ubuntu:trusty /bin/bash
# Die Container können sich nun untereinander über ihre Aliasnamen ansprechen (HTTP://container1), keine IPs verwenden !

# docker-compose build
# docker-compose up [-d] --scale microservice=3
# docker-compose scale microservice=3 (deprecated)
# docker-compose ps
# docker logs ID/NAME;
# docker-compose down

version: '3'
services:

    microservice:
        build:
            context: ./kubernetes-microservice
            dockerfile: Dockerfile
        image: kubernetes-microservice:latest
        restart: always
#         environment:
#             SPRING_APPLICATION_JSON:
#                 '{
#          "spring":
#          {
#            "boot":
#            {
#              "client":
#              {
#                "prefer-ip": "true"
#              }
#            }
#          }
#        }'
        #ports:
            #- 8080

    loadbalancer:
        image: dockercloud/haproxy:latest
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 80:80
        links:
            - microservice

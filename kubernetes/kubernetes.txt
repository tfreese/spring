# install minikube
https://kubernetes.io/de/docs/setup/minikube/

pacman -S minikube;

https://github.com/kubernetes/minikube/releases/latest
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
&& chmod +x minikube \
&& sudo mv minikube /usr/local/bin/ \
&& minikube --help


# install kubectl
pacman -S kubectl;

curl -Lo https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
&& chmod +x kubectl \
&& sudo mv kubectl /usr/local/bin/
&& kubectl version

===================================================================================================

minikube config set driver docker;
minikube config set memory 8192;
minikube config set cpus 8;
minikube addons enable registry; # To push Docker images

minikube start --driver=docker --memory=8192m --cpus=8 --mount-string=/mnt/ssd850/minikube:/pv --mount;
minikube start --mount-string=/mnt/ssd850/minikube:/pv --mount;

minikube stop;
minikube delete;
minikube config -h;
minikube config view;
minikube addons list;
minikube addons enable dashboard;
minikube addons enable metrics-server;
minikube addons enable ingress;
minikube status;
minikube ip;
minikube dashboard [--url];
minikube delete;
minikube logs;
minikube service list;
minikube service microservice --url;
curl $(minikube service microservice --url);
curl $(minikube ip);

===================================================================================================

kubectl apply -f *.yaml:
kubectl get all;
kubectl get TYPE --output=wide;
kubectl get TYPE -l app=NAME --output=wide;
kubectl describe TYPES;
kubectl describe TYPE NAME;
kubectl api-resources; # Describe API-Versions
kubectl config view;
kubectl delete TYPE NAME:
kubectl get secret test-secret -o=yaml;
kubectl delete TYPE -n <namespace> NAME;
kubectl edit TYPE NAME; -> generiert YAML
kubectl cluster-info;

kubectl delete services hello-minikube;
kubectl delete deployment hello-minikube;

kubectl run microservice --image=k8s.gcr.io/microservice:1.10 --port=8080;
kubectl create microservice --image=k8s.gcr.io/echoserver:1.10 --port=8080;
kubectl expose deployment microservice --type=NodePort;

===================================================================================================

# Share local Docker images with minikube.

# Start local registry.
docker run -d -p 5000:5000 --restart=always -v /mnt/ssd850/docker-registry:/var/lib/registry --name registry registry:latest

# Tag image for local registry.
docker tag microservice:latest localhost:5000/microservice:latest;

# Push iomage into local Registry
docker push localhost:5000/microservice:latest;

# Delete local Image (optional)
docker image remove -f microservice microservice:1 localhost:5000/microservice:latest;

# Load Image from local Registry (optional for testing)
docker pull localhost:5000/microservice:latest;

# Load image into minikube, USE NOT LOCALHOST, USE THE LOCAL IP !!!.
minikube image load 192.168.155.100:5000/microservice:latest;
minikube image ls --format table;

# Start image, image-pull-policy MUST 'NEVER' !!!
kubectl run microservice --image=192.168.155.100:5000/microservice:latest --image-pull-policy=Never --restart=Never (--port=8989);

kubectl describe pod microservice;
kubectl delete pod microservice;
kubectl logs microservice;

# Only for testing !!!
kubectl port-forward microservice 8080:8080;

for i in {1..20}; do curl $(minikube service microservice --url); echo ""; sleep 0.1; done;

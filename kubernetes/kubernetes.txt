# install minikube
https://kubernetes.io/de/docs/setup/minikube/

pacman -S minikube;

https://github.com/kubernetes/minikube/releases/latest
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
&& chmod +x minikube \
&& sudo mv minikube /usr/local/bin/ \
&& minikube --help


# install kubectl
pacman -S kubectl;

curl -Lo https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
&& chmod +x kubectl \
&& sudo mv kubectl /usr/local/bin/
&& kubectl version

===================================================================================================

# Start-Parameter
minikube config -h
minikube config set memory 4096 [4GB]
minikube config set cpus 4

# minicube mit 2GB RAM, 4 CPUs starten
minikube start [--memory=2048m --cpus=4]
minikube addons list;
minikube addons enable ingress;
minikube status;
minikube ip;
minikube dashboard [--url];
minikube delete;
minikube logs;

Use 'minikube start -p <name>' to create a new cluster, or 'minikube delete' to delete this one.
kubectl cluster-info;

# Test
kubectl run hello-minikube --image=k8s.gcr.io/echoserver:1.10 --port=8080;
#kubectl create hello-minikube --image=k8s.gcr.io/echoserver:1.10 --port=8080;
kubectl expose deployment hello-minikube --type=NodePort;
curl $(minikube service hello-minikube --url);
curl $(minikube ip);

kubectl delete services hello-minikube;
kubectl delete deployment hello-minikube;
minikube stop;

eval $(minikube docker-env);
kubectl get all;
kubectl get pod;
kubectl get deployment;
kubectl get service;
kubectl get events;
kubectl describe pods;
kubectl describe pod microservice;
kubectl describe deployment microservice;
kubectl describe service microservice;
kubectl describe ingress microservice;
kubectl api-resources; # Describe API-Versions
kubectl config view;

minikube service list;
minikube service microservice --url;
for i in {1..1000}; do curl 192.168.155.101:32652/greet; echo ""; sleep 1; done;

# docker network create my-fancy-network
# docker run -i -t --name container1 --net=my-fancy-network --net-alias=container1 ubuntu:trusty /bin/bash
# docker run -i -t --name container2 --net=my-fancy-network --net-alias=container2 ubuntu:trusty /bin/bash
# Die Container können sich nun untereinander über ihre Aliasnamen ansprechen (HTTP://container1), keine IPs verwenden !

# docker-compose build
# docker-compose up [-d] --scale spring-microservice=3
# docker-compose ps
# docker logs ID/NAME
# docker-compose down
#
# multi-stage builds: https://docs.docker.com/develop/develop-images/multistage-build/

version: '3'
services:

    spring-resilience:
        container_name: spring-resilience
        build:
            context: .
            dockerfile: Dockerfile
        image: spring-resilience:latest
        ports:
            - 8080:8080
        restart: unless-stopped             

    # docker run -d --name=prometheus -p 9090:9090 -v prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus --config.file=/etc/prometheus/prometheus.yml
    # docker start/stop prometheus
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - 9090:9090
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'                   
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - "/etc/timezone:/etc/timezone:ro"
            - "/etc/localtime:/etc/localtime:ro"
        environment:
            - TZ=Europe/Berlin
        restart: unless-stopped                                            
        depends_on:
            - spring-resilience
        deploy:
            resources:
                limits:
                    #cpus: "0.001"
                    memory: 64M
                reservations:
                    #cpus: "0.0001"
                    memory: 20M            
            
    # docker run -d --name=grafana -p 3000:3000 grafana/grafana
    # docker start/stop grafana
    # admin:admin
    # Add Datasource
    # prometheus:9090
    # docker inspect misc-micrometer_prometheus_1 | grep IPAddress
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - 3000:3000
        volumes:
            - "/etc/timezone:/etc/timezone:ro"
            - "/etc/localtime:/etc/localtime:ro"
        environment:
            - TZ=Europe/Berlin
            - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
            - GF_LOG_LEVEL=warn            
        restart: unless-stopped            
        depends_on:
            - prometheus
        deploy:
            resources:
                limits:
                    #cpus: "0.001"
                    memory: 64M
                reservations:
                    #cpus: "0.0001"
                    memory: 20M            

// Execute Tasks in SubModule: gradle MODUL:clean build
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath("de.freese.gradle:gradle-plugins:$version_myConventionPlugin")
        classpath("io.spring.gradle:dependency-management-plugin:$version_springDependencyManagement")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$version_springBoot")
        classpath("org.openjfx:javafx-plugin:$version_javafxPlugin")
    }
}

subprojects {
    apply plugin: "java"
//    apply plugin: "maven-publish"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "de.freese.gradle.plugin.conventions"

    dependencyManagement {
        imports {
            mavenBom("de.codecentric:spring-boot-admin-dependencies:$version_springBootAdmin")
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:$version_springCloud")
        }

        dependencies {
            dependency("com.atomikos:transactions-spring-boot3-starter:$version_atomicos")
            dependency("com.esotericsoftware:kryo:$version_kryo")
            dependency("com.nimbusds:nimbus-jose-jwt:$version_nimbus")

            dependency("de.javakaffee:kryo-serializers:$version_kryoSerializers")

            dependency("io.jsonwebtoken:jjwt:$version_jjwt")

            //dependency("javax:javaee-web-api:$version_javaee")
            dependency("jakarta.platform:jakarta.jakartaee-api:$version_jakarta")

            dependencySet(group: "org.apache.qpid", version: "$version_qpid") {
                entry("qpid-broker") {
                    exclude group: "ch.qos.logback", name: "logback-core"
                    exclude group: "ch.qos.logback", name: "logback-classic"
                }
                entry("qpid-bdbstore") {
                    // Wird in keinem Repository gefunden.
                    exclude group: "com.sleepycat", name: "je"
                }
            }

            dependency("org.joinfaces:primefaces-spring-boot-starter:${version_joinfaces}")

            dependencySet(group: "org.openjdk.jmh", version: "$version_jmh") {
                entry "jmh-core"
                entry "jmh-generator-annprocess"
            }

            dependency("org.primefaces.themes:all-themes:$version_primefacesThemes")
            dependency("org.springdoc:springdoc-openapi-ui:$version_springDoc")

            dependencySet(group: "org.springframework.cloud", version: "$version_springCloudNetflix") {
                entry "spring-cloud-starter-netflix-ribbon"
                entry "spring-cloud-starter-netflix-hystrix"
                entry "spring-cloud-starter-netflix-hystrix-dashboard"
            }
        }
    }

    dependencies {
        //implementation(platform("de.freese:maven-bom:$version_mavenBom"))

        testImplementation("org.junit.jupiter:junit-jupiter")
        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    }
}

project("kubernetes") {
    description = "Folder project"
    // All SubProjects have Plugin 'org.springframework.boot' that requires a mainClass.
    springBoot {
        mainClass = "disabled"
    }
}

project("spring-cloud") {
    description = "Folder project"
    // All SubProjects have Plugin 'org.springframework.boot' that requires a mainClass.
    springBoot {
        mainClass = "disabled"
    }
}

project("spring-messaging") {
    description = "Folder project"
    // All SubProjects have Plugin 'org.springframework.boot' that requires a mainClass.
    springBoot {
        mainClass = "disabled"
    }
}

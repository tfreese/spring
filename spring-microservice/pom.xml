<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.freese.spring</groupId>
		<artifactId>spring</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>spring-microservice</artifactId>
	<packaging>jar</packaging>

	<name>${project.groupId} - ${project.artifactId}</name>
	<description>MicroService von spring-boot</description>

	<properties>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.properties</include>
					<include>application.yml</include>
				</includes>
			</resource>
			<resource>
				<!-- Alles andere NICHT filtern -->
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>application.properties</exclude>
					<exclude>application.yml</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<!-- spring-boot:run, clean package spring-boot:repackage für executable jar -->
			<!-- java -jar -D"server.port=8899" target/***.jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>de.freese.spring.MicroServiceApplication</mainClass>
					<!--jvmArguments>
						-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
						</jvmArguments -->
					<layout>ZIP</layout>
					<classifier>jar-with-dependencies</classifier>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
					<!--execution>
						<id>package</id>
						<phase>package</phase>
						<goals>
						<goal>repackage</goal>
						</goals>
						</execution -->
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- compile scope -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>		
		<!-- Ist bereits in spring-boot-starter-json enthalten (Release 2.X)
			Formatierung für LocaDate*Klassen, siehe JavaTimeModule -->
		<!--dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
			</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- runtime scope -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- provided scope -->
		<!-- test scope -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>

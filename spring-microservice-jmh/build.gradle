plugins {
    id "java"
    id "org.springframework.boot"
}

description = "JMH-Benchmark eines MicroService mit spring-boot"

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-webflux")

    testAnnotationProcessor("org.openjdk.jmh:jmh-generator-annprocess")

    testImplementation("org.openjdk.jmh:jmh-core")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
springBoot {
    mainClass = "de.freese.spring.Benchmarks"
}

// test {
//    filter {
//        // JMH-Test deaktivieren, weil das mit den Annotation-Processor nicht klappt.
//        excludeTestsMatching "de.freese.spring.TestRestService.testBenchmark"
//    }
//}

// For Placeholder in Resources.
ext.artifactId = project.name

processResources {
    def map = [
            "project_description": project.description,
            "project_artifactId" : project.name,
            "project_version"    : project.version
    ]

    filesMatching(["application*.yml", "application*.yaml", "application*.properties"]) {
        filteringCharset = "UTF-8"

        expand(map)
    }
}

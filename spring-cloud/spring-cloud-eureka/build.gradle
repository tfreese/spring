plugins {
    id "java"
    id "org.springframework.boot"
}

description = "EUREKA-Server (ServiceDiscovery) von spring-boot"

dependencies {
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")

    runtimeOnly("de.codecentric:spring-boot-admin-starter-client")
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
springBoot {
    mainClass = "de.freese.spring.cloud.eureka.EurekaServerApplication"
}

// For Placeholder in Resources.
ext.artifactId = project.name

processResources {
    def map = [
            "project_description": project.description,
            "project_artifactId" : project.name,
            "project_version"    : project.version
    ]

    filesMatching("application.yml") {
        filteringCharset = "UTF-8"

        // expand(project.properties)
        expand(map)
    }
}

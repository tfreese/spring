plugins {
    id "java"
    id "org.springframework.boot"
}

description = "EUREKA-Server (ServiceDiscovery) von spring-boot"

dependencies {
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")

    runtimeOnly("de.codecentric:spring-boot-admin-starter-client")
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
springBoot {
    mainClass = "de.freese.spring.cloud.eureka.EurekaServerApplication"
}

// For Placeholder in Resources.
ext.artifactId = project.name

processResources {
    // All Files
    // expand(project.properties)

    // filesNotMatching(...)
    // filesMatching("**/*.properties", "a.txt", "z.txt")
    filesMatching("application.yml") {
        filteringCharset = "UTF-8"

        // If Problems escape Placeholder: \${...}
        expand(project.properties)
    }

    // duplicatesStrategy = "include"
    // with copySpec {
    //     from "src/main/resources"
    //     include "**/application*.yml"
    //     project.properties.findAll().each {
    //         prop ->
    //             if (prop.value != null) {
    //                 filter(ReplaceTokens, tokens: [(prop.key): prop.value])
    //                 filter(ReplaceTokens, tokens: [('project.' + prop.key): prop.value])
    //             }
    //     }
    // }
}

plugins {
    id("java")
    id("org.springframework.boot")
}

description = "MicroService mit spring-boot"

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")

    runtimeOnly("de.codecentric:spring-boot-admin-starter-client")
    runtimeOnly("org.hsqldb:hsqldb")
    runtimeOnly("org.springframework.boot:spring-boot-starter-actuator")

    testImplementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
springBoot {
    mainClass = "de.freese.spring.cloud.microservice.MicroServiceApplication"
}

// For Placeholder in Resources.
ext.artifactId = project.name

processResources {
    def map = [
            "project_description": project.description,
            "project_artifactId" : project.name,
            "project_version"    : project.version
    ]

    filesMatching("application.yml") {
        // filteringCharset = "UTF-8"

        expand(map)
    }
}
